@page "/admin/books/edit/{id:long}"
@page "/admin/books/create"
@inherits OwningComponentBase<IBookstoreRepository>

<style>
    div.validation-message {color: rgb(220,53,69); font-weight:500}
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText a Project</h3>

<EditForm Model="b" OnValidSubmit="SaveBook">

    <DataAnnotationsValidator></DataAnnotationsValidator>


    <div>
        <label>Book Id:</label>
        <input class="form-control" disabled value="@b.BookId" />
    </div>

    <div>
        <label>Title:</label>
        <ValidationMessage For="@(() => b.Title)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="b.Title"></InputText>
    </div>

    <div>
        <label>Author:</label>
        <ValidationMessage For="@(() => b.Author)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="b.Author"></InputText>
    </div>

    <div>
        <label>Publisher:</label>
        <ValidationMessage For="@(() => b.Publisher)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="b.Publisher"></InputText>
    </div>

    <div>
        <label>ISBN:</label>
        <ValidationMessage For="@(() => b.Isbn)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="b.Isbn"></InputText>
    </div>

    <div>
        <label>Classification:</label>
        <ValidationMessage For="@(() => b.Classification)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="b.Classification"></InputText>
    </div>

    <div>
        <label>Category:</label>
        <ValidationMessage For="@(() => b.Category)"></ValidationMessage>
        <InputText class="form-control" @bind-Value="b.Category"></InputText>
    </div>

    <div>
        <label>Page Count:</label>
        <ValidationMessage For="@(() => b.PageCount)"></ValidationMessage>
        <InputNumber class="form-control" @bind-Value="b.PageCount"></InputNumber>
    </div>

    <div>
        <label>Price:</label>
        <ValidationMessage For="@(() => b.Price)"></ValidationMessage>
        <div class="input-group">
            <!-- This adds a $ to the side of of an input. That way when a person goes to 
                add a price they know not to add a $ sign, just the number.-->
            <div class="input-group-text">$</div>
            <InputNumber class="form-control" @bind-Value="b.Price"></InputNumber>
        </div>
    </div>

    <!--for this section I learned about the different spacing notation in bootstrap. The "p" stands for 
        padding and the "t" stands for top. Without the "t" there is the same padding all around, but this
         only puts it on the top. The "t" can be substituted for b=bottom, l=left, r=right, x=both left and right, and
        y=top and bottom-->
    <div class="pt-2">
        <button type="submit" class="btn btn-@ThemeColor">Save</button>
        <NavLink class="btn btn-secondary" href="/admin/books">Cancel</NavLink>
    </div>
    

</EditForm>

@code {
    [Parameter]
    public long Id { get; set; } = 0;
    public string ThemeColor => Id == 0 ? "primary" : "warning";
    public string TitleText => Id == 0 ? "Create" : "Edit";

    public Books b { get; set; } = new Books();

    public IBookstoreRepository repo => Service;

    protected override void OnParametersSet()
    {
        if (Id != 0) //Existing Book
        {
            b = repo.Books.FirstOrDefault(x => x.BookId == Id);
        }
    }

    public void SaveBook()
    {
        if (Id == 0) //New Book
        {
            repo.CreateBook(b);
        }
        else
        {
            repo.SaveBook(b);
        }

        NavManager.NavigateTo("/admin/books");

    }

    [Inject]
    public NavigationManager NavManager { get; set; }
}
